{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/actions.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","utils/multicall.ts","contexts/BlockContext.tsx","utils/addressHelpers.ts","config/constants/types.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","App.tsx","contexts/ToastsContext/Provider.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","contexts/Localisation/translationsContext.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","toNumber","pow","times","tokenAmount","tokenPriceVsQuote","toString","masterchefABI","pid","info","totalAllocPoint","upwardPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserNextHarvestUntil","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userNextHarvestUntil","userFarmEarnings","farmAllowance","allowance","nextHarvestUntil","coinToTickerSymbol","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","fetchPoolsPublicDataAsync","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceCakeBusd","bnbBusd","dividedBy","usePriceBitcoin","useTotalValue","bnbPrice","cakePrice","btcPrice","totalValue","priceData","coins","coin","push","api","join","useState","setData","fetch","response","json","coinString","res","tokenPrices","price","usd","tickerSymbol","console","error","fetchData","useGetPriceData","i","length","stakingTokenName","totalStaked","power","value","multipliedBy","plus","tokenSymbol","quoteTokenSymbol","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","Container","styled","theme","mediaQueries","sm","Page","lg","masterChef","56","97","upward","wbnb","busd","tusd","usdt","usdc","btcb","dai","eth","ltc","pcs_cake","link","mulltiCall","lottery","lotteryNFT","abi","web3","getWeb3","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","decodeFunctionResult","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","PoolCategory","MASTER_CHEF","TOKEN_PER_BLOCK","sousId","sortOrder","stakingTokenAddress","tokenName","contractAddress","projectLink","poolCategory","CORE","tokenPerBlock","harvest","isFinished","lpSymbol","contracts","risk","fetchPoolsTotalStaking","nonBnbPools","poolsConfig","filter","p","bnbPool","callsNonBnbPools","poolConfig","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserNextHarvestUntil","fetchUserPendingRewards","pendingRewards","pendingUpward","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","totalStakings","liveData","totalStaking","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","then","r","translationApiResponse","catch","e","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","useTheme","StyledThemeCopntext","config","label","icon","href","openHrefInNewTab","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","onDismiss","TranslateString","title","src","alt","style","height","marginBottom","size","color","as","NftGlobalNotification","useModal","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","document","location","Home","lazy","Farms","Pools","Referrals","Products","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","getParams","queryString","search","useCookies","setCookie","referralAddress","refer","path","expires","Date","now","Global","exact","component","memo","ToastsContext","undefined","ToastsProvider","toasts","setToasts","toast","useCallback","description","type","prevToasts","id","kebabCase","currentToasts","prevToast","clear","remove","toastError","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","getRpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","defaultTranslationState"],"mappings":"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","file":"static/js/main.c904da46.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport erc20 from \"config/abi/erc20.json\";\nimport masterchefABI from \"config/abi/masterchef.json\";\nimport multicall from \"utils/multicall\";\nimport { getMasterChefAddress } from \"utils/addressHelpers\";\nimport farmsConfig from \"config/constants/farms\";\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: \"balanceOf\",\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: \"balanceOf\",\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: \"balanceOf\",\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: \"totalSupply\",\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: \"decimals\",\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: \"decimals\",\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        // quoteTokenDecimals\n      ] = await multicall(erc20, calls);\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply));\n\n      let lpTotalInQuoteToken = new BigNumber(0);\n\n      if (new BigNumber(quoteTokenBlanceLP).toNumber() > 0) {\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio);\n      }\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n\n      // NOTE: quoteTokenAmount is unused at the moment\n      // let quoteTokenAmount;\n\n      // if (lpTokenRatio.isNaN()) {\n      //   quoteTokenAmount = new BigNumber(0);\n      // } else {\n      //   quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n      //     .div(new BigNumber(10).pow(quoteTokenDecimals))\n      //     .times(lpTokenRatio);\n      // }\n\n      let tokenPriceVsQuote = new BigNumber(0);\n\n      if (quoteTokenBlanceLP.toString() !== \"0\") {\n        tokenPriceVsQuote = new BigNumber(tokenBalanceLP).div(new BigNumber(quoteTokenBlanceLP));\n      }\n\n      const [info, totalAllocPoint, upwardPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: \"poolInfo\",\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: \"totalAllocPoint\",\n        },\n        {\n          address: getMasterChefAddress(),\n          name: \"upwardPerBlock\",\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        upwardPerBlock: new BigNumber(upwardPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserNextHarvestUntil = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[3]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingUpward',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserNextHarvestUntil,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userNextHarvestUntil = await fetchFarmUserNextHarvestUntil(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      nextHarvestUntil: userNextHarvestUntil[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/* eslint-disable dot-notation */\n/* eslint-disable no-continue */\n/* eslint-disable camelcase */\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useRefresh from \"hooks/useRefresh\";\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from \"./actions\";\nimport { State, Farm, Pool } from \"./types\";\n\nconst coinToTickerSymbol = {\n  \"binancecoin\"      : \"BNB\",\n  \"binance-usd\"      : \"BUSD\",\n  \"true-usd\"         : \"TUSD\",\n  \"tether\"           : \"USDT\",\n  \"usd-coin\"         : \"USDC\",\n  \"binance-bitcoin\"  : \"BTCB\",\n  \"dai\"              : \"DAI\",\n  \"ethereum\"         : \"ETH\",\n  \"litecoin\"         : \"LTC\",\n  \"pancakeswap-token\": \"CAKE\",\n  \"chainlink\"        : \"LINK\",\n}\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const farm = useFarmFromPid(2); // BNB-BUSD on PancakeSwap\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const bnbBusd = usePriceBnbBusd();\n  const farm = useFarmFromPid(1); // UPWARD-BNB LP\n\n  if (bnbBusd.toNumber()) {\n    if (farm.tokenPriceVsQuote.toString() !== \"0\") {\n      return new BigNumber(farm.tokenPriceVsQuote).dividedBy(bnbBusd.toNumber());\n    }\n\n    return new BigNumber(0.0001);\n  }\n\n  return ZERO;\n}\n\nexport const usePriceBitcoin = (): BigNumber => {\n  const farm = useFarmFromPid(11); // BTCB-BUSD LP\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO;\n}\n\nconst useGetPriceData: any = () => {\n  // https://api.coingecko.com/api/v3/coins/list?include_platform=true\n\n  const coins = [];\n\n  for (const coin in coinToTickerSymbol) {\n    coins.push(coin);\n  }\n\n  const api = `https://api.coingecko.com/api/v3/simple/price?ids=${coins.join(\",\")}&vs_currencies=usd`;\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(api)\n        const res = await response.json()\n        const tokenPrices = {};\n\n        for (const coinString in res) {\n          const price = res[coinString].usd;\n          const tickerSymbol = coinToTickerSymbol[coinString];\n          tokenPrices[tickerSymbol] = new BigNumber(price);\n\n          if (tickerSymbol === \"BNB\") {\n            tokenPrices[\"WBNB\"] = new BigNumber(price);\n          }\n        }\n\n        setData(tokenPrices);\n      } catch (error) {\n        console.error(\"Unable to fetch price data:\", error)\n      }\n    }\n\n    fetchData()\n  }, [api, setData]);\n\n  return data;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const pools = usePools(\"0x0000000000000000000000000000000000000000\"); // We don't need specific user data here\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  const btcPrice = usePriceBitcoin();\n  let totalValue = new BigNumber(0);\n  const priceData = useGetPriceData();\n\n  priceData[\"UPWARD\"] = cakePrice;\n\n  for (let i = 0; i < pools.length; i++) {\n    const {\n      stakingTokenName,\n      tokenDecimals,\n      totalStaked\n    } = pools[i];\n\n    if (!totalStaked || (new BigNumber(totalStaked)).toNumber() === 0) {\n      continue;\n    }\n\n    const power = (new BigNumber(10)).pow(tokenDecimals);\n    const wholeTokensStaked = new BigNumber(totalStaked).div(power);\n    const value = wholeTokensStaked.multipliedBy(priceData[stakingTokenName]);\n\n    totalValue = totalValue.plus(value);\n  }\n\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i];\n\n    if (farm.lpTotalInQuoteToken) {\n      let value = new BigNumber(0);\n\n      if (farm.tokenSymbol === \"BUSD\" && farm.quoteTokenSymbol === \"BNB\") {\n        value = bnbPrice.times(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === \"BNB\") {\n        if ((new BigNumber(farm.lpTotalInQuoteToken)).toNumber() === 0) {\n          continue;\n        }\n\n        value = bnbPrice.times(farm.lpTotalInQuoteToken);\n\n      } else if (farm.quoteTokenSymbol === \"BUSD\" ||\n                 farm.quoteTokenSymbol === \"USDT\" ||\n                 farm.quoteTokenSymbol === \"USDC\"\n      ) {\n        value = farm.lpTotalInQuoteToken;\n      } else if (farm.quoteTokenSymbol === \"ETH\") {\n        // Every single farm LP pair either contains BNB or a stablecoin, the only exception to this is BTCB-ETH\n        value = btcPrice.times(farm.lpTotalInQuoteToken);\n      }\n\n      totalValue = totalValue.plus(value);\n    }\n  }\n\n  return totalValue;\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  masterChef: {\n    56: \"0x375ee6d02f1197715C41E51A8F609B13839F69CB\",\n    97: \"\",\n  },\n  upward: {\n    // https://runitup.finance/\n    56: \"0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n    97: \"\",\n  },\n  wbnb: {\n    // https://www.binance.org/\n    56: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    97: \"\",\n  },\n  busd: {\n    // https://www.paxos.com/busd/\n    56: \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\n    97: \"\",\n  },\n  tusd: {\n    // https://www.trueusd.com/\n    56: \"0x14016E85a25aeb13065688cAFB43044C2ef86784\"\n  },\n  usdt: {\n    // https://tether.to/\n    56: \"0x55d398326f99059fF775485246999027B3197955\"\n  },\n  usdc: {\n    // https://www.centre.io/\n    56: \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\"\n  },\n  btcb: {\n    // https://info.binance.com/en/currencies/bitcoin-bep2\n    56: \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\"\n  },\n  dai: {\n    // https://makerdao.com/\n    56: \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\"\n  },\n  eth: {\n    // https://ethereum.org/\n    56: \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"\n  },\n  ltc: {\n    // https://litecoin.org/\n    56: \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\"\n  },\n  pcs_cake: {\n    // https://pancakeswap.finance/\n    56: \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n  },\n  link: {\n    // https://chain.link/\n    56: \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\"\n  },\n  // TODO: {\n  //   // WEBSITE\n  //   56: \"0x0000000000000000000000000000000000000000\"\n  // },\n  mulltiCall: {\n    56: \"0x1ee38d535d541c55c9dae27b12edf090c608e6fb\",\n    97: \"\",\n  },\n  lottery: {\n    56: \"\",\n    97: \"\",\n  },\n  lotteryNFT: {\n    56: \"\",\n    97: \"\",\n  },\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.upward[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: string\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: string\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { PoolConfig, PoolCategory } from \"./types\";\n\nconst MASTER_CHEF = \"0x375ee6d02f1197715C41E51A8F609B13839F69CB\";\nconst TOKEN_PER_BLOCK = \"100\";\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    sortOrder: 1,\n    stakingTokenName: \"UPWARD\",\n    stakingTokenAddress: \"0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n    tokenName: \"UPWARD\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://runitup.finance/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 16,\n    sortOrder: 1,\n    stakingTokenName: \"WBNB\",\n    stakingTokenAddress: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    tokenName: \"WBNB\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.binance.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 17,\n    sortOrder: 2,\n    stakingTokenName: \"BUSD\",\n    stakingTokenAddress: \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\n    tokenName: \"BUSD\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.paxos.com/busd/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 18,\n    sortOrder: 2,\n    stakingTokenName: \"TUSD\",\n    stakingTokenAddress: \"0x14016E85a25aeb13065688cAFB43044C2ef86784\",\n    tokenName: \"TUSD\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.trueusd.com/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 19,\n    sortOrder: 2,\n    stakingTokenName: \"USDT\",\n    stakingTokenAddress: \"0x55d398326f99059fF775485246999027B3197955\",\n    tokenName: \"USDT\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://tether.to/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 20,\n    sortOrder: 2,\n    stakingTokenName: \"USDC\",\n    stakingTokenAddress: \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\",\n    tokenName: \"USDC\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.centre.io/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 21,\n    sortOrder: 2,\n    stakingTokenName: \"BTCB\",\n    stakingTokenAddress: \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\",\n    tokenName: \"BTCB\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://info.binance.com/en/currencies/bitcoin-bep2\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 22,\n    sortOrder: 2,\n    stakingTokenName: \"DAI\",\n    stakingTokenAddress: \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\n    tokenName: \"DAI\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://makerdao.com/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 23,\n    sortOrder: 2,\n    stakingTokenName: \"ETH\",\n    stakingTokenAddress: \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\n    tokenName: \"ETH\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://ethereum.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 24,\n    sortOrder: 2,\n    stakingTokenName: \"LTC\",\n    stakingTokenAddress: \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\",\n    tokenName: \"LTC\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://litecoin.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 25,\n    sortOrder: 2,\n    stakingTokenName: \"CAKE\",\n    stakingTokenAddress: \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\",\n    tokenName: \"CAKE\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://pancakeswap.finance/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 26,\n    sortOrder: 2,\n    stakingTokenName: \"LINK\",\n    stakingTokenAddress: \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\",\n    tokenName: \"LINK\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://chain.link/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  }\n];\n\nexport default pools;\n","import contracts from \"./contracts\";\nimport { FarmConfig } from \"./types\";\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 1,\n    lpSymbol: \"UPWARD-BNB LP\",\n    tokenSymbol: \"UPWARD\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.upward,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x6A0c2C3075Ab102406742eC32cA9d81774083626\" // UPWARD-BNB on PancakeSwap\n    },\n    risk: 5\n  },\n  {\n    pid: 2,\n    lpSymbol: \"BUSD-BNB LP\",\n    tokenSymbol: \"BUSD\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.busd,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\" // BNB-BUSD on PancakeSwap\n    },\n    risk: 5\n  },\n  {\n    pid: 3,\n    lpSymbol: \"CAKE-BNB LP\",\n    tokenSymbol: \"CAKE\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.pcs_cake,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\" // CAKE-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 4,\n    lpSymbol: \"ETH-BNB LP\",\n    tokenSymbol: \"ETH\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x74E4716E431f45807DCF19f284c7aA99F18a4fbc\" // ETH-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 5,\n    lpSymbol: \"BTCB-BNB LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.btcb,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\" // BTCB-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 6,\n    lpSymbol: \"LINK-BNB LP\",\n    tokenSymbol: \"LINK\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.link,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\" // LINK-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 7,\n    lpSymbol: \"USDT-BNB LP\",\n    tokenSymbol: \"USDT\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.usdt,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE\" // USDT-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 8,\n    lpSymbol: \"USDT-BUSD LP\",\n    tokenSymbol: \"USDT\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.usdt,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x7EFaEf62fDdCCa950418312c6C91Aef321375A00\" // USDT-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 9,\n    lpSymbol: \"TUSD-BUSD LP\",\n    tokenSymbol: \"TUSD\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.tusd,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x2E28b9B74D6d99D4697e913b82B41ef1CAC51c6C\" // TUSD-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 10,\n    lpSymbol: \"USDC-BUSD LP\",\n    tokenSymbol: \"USDC\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.usdc,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1\" // USDC-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 11,\n    lpSymbol: \"BTCB-BUSD LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.btcb,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0xF45cd219aEF8618A92BAa7aD848364a158a24F33\" // BTCB-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 12,\n    lpSymbol: \"DAI-BUSD LP\",\n    tokenSymbol: \"DAI\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.dai,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489\" // DAI-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 13,\n    lpSymbol: \"USDC-USDT LP\",\n    tokenSymbol: \"USDC\",\n    quoteTokenSymbol: \"USDT\",\n    tokenAddresses: contracts.usdc,\n    quoteTokenAdresses: contracts.usdt,\n    lpAddresses: {\n      56: \"0xEc6557348085Aa57C72514D67070dC863C0a5A8c\" // USDC-USDT on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 14,\n    lpSymbol: \"ETH-USDC LP\",\n    tokenSymbol: \"ETH\",\n    quoteTokenSymbol: \"USDC\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.usdc,\n    lpAddresses: {\n      56: \"0xEa26B78255Df2bBC31C1eBf60010D78670185bD0\" // ETH-USDC on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 15,\n    lpSymbol: \"BTCB-ETH LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"ETH\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.btcb,\n    lpAddresses: {\n      56: \"0xD171B26E4484402de70e3Ea256bE5A2630d7e88D\" // BTCB-ETH on PancakeSwap\n    },\n    risk: 3\n  },\n]\n\nexport default farms\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n})}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== \"BNB\")\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === \"BNB\")\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from \"web3-utils\";\nimport poolsConfig from \"config/constants/pools\";\nimport masterChefABI from \"config/abi/masterchef.json\";\nimport erc20ABI from \"config/abi/erc20.json\";\nimport multicall from \"utils/multicall\";\nimport { getMasterChefAddress } from \"utils/addressHelpers\";\nimport { getWeb3 } from \"utils/web3\";\nimport BigNumber from \"bignumber.js\";\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== \"BNB\")\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === \"BNB\")\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: \"allowance\",\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: \"balanceOf\",\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: \"userInfo\",\n    params: [p.sousId, account],\n  }))\n\n  const userInfo = await multicall(masterChefABI, calls)\n\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo(\"0\", account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserNextHarvestUntil = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: \"userInfo\",\n    params: [p.sousId, account],\n  }))\n\n  const userInfo = await multicall(masterChefABI, calls)\n\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].nextHarvestUntil._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { nextHarvestUntil: masterPoolAmount } = await masterChefContract.methods.userInfo(\"0\", account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: \"pendingUpward\",\n    params: [p.sousId, account],\n  }))\n\n  const res = await multicall(masterChefABI, calls)\n\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingUpward(\"0\", account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsTotalStaking /* , fetchPoolsBlockLimits */ } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserNextHarvestUntil,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const totalStakings = await fetchPoolsTotalStaking();\n\n  const liveData = poolsConfig.map((pool) => {\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId);\n    return {...totalStaking};\n  })\n\n  /*\n    const blockLimits = await fetchPoolsBlockLimits()\n    const totalStakings = await fetchPoolsTotalStaking()\n\n    const liveData = poolsConfig.map((pool) => {\n      const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n      const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n\n      return {\n        ...blockLimit,\n        ...totalStaking,\n      }\n    })\n  */\n\n  dispatch(setPoolsPublicData(liveData));\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const nextHarvestUntil = await fetchUserNextHarvestUntil(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    nextHarvestUntil: nextHarvestUntil[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId]\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { createGlobalStyle } from \"styled-components\";\nimport { PancakeTheme } from \"@pancakeswap-libs/uikit\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: \"Kanit\", sans-serif;\n  }\n  body {\n    background-color: #0d0908;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={dark}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from \"@pancakeswap-libs/uikit\";\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Home\",\n    icon: \"HomeIcon\",\n    href: \"/\",\n  },\n  {\n    label: \"Trade UPWARD\",\n    icon: \"TradeIcon\",\n    href: \"https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n    openHrefInNewTab: true,\n  },\n  {\n    label: \"Farms\",\n    icon: \"FarmIcon\",\n    href: \"/farms\",\n  },\n  {\n    label: \"Pools\",\n    icon: \"PoolIcon\",\n    href: \"/pools\",\n  },\n  {\n    label: \"Referrals\",\n    icon: \"ReferralsIcon\",\n    href: \"/referrals\",\n  },\n  // {\n  //   label: \"UPWARD Products\",\n  //   icon: \"ProductsIcon\",\n  //   href: \"/products\",\n  // },\n  {\n    label: \"Charts\",\n    icon: \"InfoIcon\",\n    items: [\n      // {\n      //   label: \"PancakeSwap\",\n      //   href: \"https://pancakeswap.info/token/0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n      //   openHrefInNewTab: true,\n      // },\n      {\n        label: \"PooCoin Charts\",\n        href: \"https://poocoin.app/tokens/0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"Bogged Finance\",\n        href: \"https://charts.bogged.finance/0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\",\n        openHrefInNewTab: true,\n      },\n      // {\n      //   label: \"DexGuru\",\n      //   href: \"https://dex.guru/token/0x4a6569FF2ca81a37342875d684aeB95E0a6d0534-bsc\",\n      //   openHrefInNewTab: true,\n      // },\n    ],\n  },\n  {\n    label: \"Documentation\",\n    icon: \"GitbookIcon\",\n    href: \"https://example.com//\",\n    openHrefInNewTab: true,\n  },\n  {\n    label: \"Telegram\",\n    icon: \"TelegramIcon\",\n    href: \"https://example.com\",\n    openHrefInNewTab: true,\n  },\n  {\n    label: \"Twitter\",\n    icon: \"TwitterIcon\",\n    href: \"https://example.com/\",\n    openHrefInNewTab: true,\n  },\n  // {\n  //   label: \"Social Media\",\n  //   icon: \"AnnouncementsIcon\",\n  //   items: [\n  //     {\n  //       label: \"Telegram\",\n  //       href: \"https://example.com\",\n  //       openHrefInNewTab: true,\n  //     },\n  //     {\n  //       label: \"Twitter\",\n  //       href: \"https://twitter.com/runitup/\",\n  //       openHrefInNewTab: true,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Audits\",\n  //   icon: \"AuditsIcon\",\n  //   items: [\n  //     {\n  //       label: \"RugDoc (Coming Soon)\",\n  //       href: \"https://rugdoc.io/project/runitup-finance/\",\n  //       openHrefInNewTab: true,\n  //     },\n  //     {\n  //       label: \"CertiK (Coming Soon)\",\n  //       href: \"https://example.com/\",\n  //       openHrefInNewTab: true,\n  //     },\n  //     {\n  //       label: \"TechRate (Coming Soon)\",\n  //       href: \"https://example.com//\",\n  //       openHrefInNewTab: true,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Medium Blog\",\n  //   icon: \"MediumIcon\",\n  //   href: \"https://goosefinance.medium.com/\",\n  //   openHrefInNewTab: true,\n  // },\n  // {\n  //   label: \"Trade\",\n  //   icon: \"TradeIcon\",\n  //   items: [\n  //     {\n  //       label: \"Exchange\",\n  //       href: \"https://exchange.goosedefi.com/\",\n  //     },\n  //     {\n  //       label: \"Liquidity\",\n  //       href: \"https://exchange.goosedefi.com/#/pool\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Pools\",\n  //   icon: \"PoolIcon\",\n  //   href: \"/pools\",\n  // },\n  // {\n  //   label: \"Lottery\",\n  //   icon: \"TicketIcon\",\n  //   href: \"/lottery\",\n  // },\n  // {\n  //   label: \"NFT\",\n  //   icon: \"NftIcon\",\n  //   href: \"/nft\",\n  // },\n  // {\n  //   label: \"More\",\n  //   icon: \"MoreIcon\",\n  //   items: [\n  //     {\n  //       label: \"Github\",\n  //       href: \"https://github.com/goosedefi/\",\n  //     },\n  //     {\n  //       label: \"Docs\",\n  //       href: \"https://goosedefi.gitbook.io/goose-finance/\",\n  //     },\n  //     {\n  //       label: \"Blog\",\n  //       href: \"https://goosefinance.medium.com/\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Partnerships/IFO\",\n  //   icon: \"GooseIcon\",\n  //   href: \"https://docs.google.com/forms/d/e/1FAIpQLSe7ycrw8Dq4C5Vjc9WNlRtTxEhFDB1Ny6jlAByZ2Y6qBo7SKg/viewform?usp=sf_link\",\n  // },\n  // {\n  //   label: \"Audit by Hacken\",\n  //   icon: \"AuditIcon\",\n  //   href: \"https://www.goosedefi.com/files/hackenAudit.pdf\",\n  // },\n  // {\n  //   label: \"Audit by CertiK\",\n  //   icon: \"AuditIcon\",\n  //   href: \"https://certik.org/projects/goose-finance\",\n  // },\n];\n\nexport default config;\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://pancakeswap.info/token/0x4a6569FF2ca81a37342875d684aeB95E0a6d0534\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Nft } from './types'\n\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n    previewImage: 'swapsies-preview.png',\n    blurImage: 'swapsies-blur.png',\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n    previewImage: 'drizzle-preview.png',\n    blurImage: 'drizzle-blur.png',\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n    previewImage: 'blueberries-preview.png',\n    blurImage: 'blueberries-blur.png',\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n    previewImage: 'circular-preview.png',\n    blurImage: 'circular-blur.png',\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n    previewImage: 'sparkle-preview.png',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import React, { useEffect, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\n\ninterface NftYouWonModalProps {\n  onDismiss?: () => void\n}\n\nconst ModalContent = styled.div`\n  padding: 24px;\n  text-align: center;\n`\n\nconst Actions = styled.div`\n  text-align: center;\n`\n\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <ModalContent>\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\n        <Heading size=\"lg\" color=\"secondary\">\n          {TranslateString(999, 'You won an NFT!')}\n        </Heading>\n      </ModalContent>\n      <Actions>\n        <Button as=\"a\" href=\"/nft\">\n          {TranslateString(999, 'Go to claim NFT')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\n/**\n * 1. Checks if nft supply available\n * 2. If supply is available check if the user can claim\n * 3. If the user can claim show a modal\n */\nconst NftGlobalNotification = () => {\n  const { account } = useWallet()\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\n  const showModal = useRef(() => onPresentBurnModal())\n\n  useEffect(() => {\n    const checkNftStatus = async () => {\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\n        rabbitmintingfarm,\n        [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ],\n      )\n\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n      const [canClaim]: [boolean] = canClaimArr\n      const [hasClaimed]: [boolean] = hasClaimedArr\n\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\n        showModal.current()\n      }\n    }\n\n    if (account && !document.location.href.includes('/nft')) {\n      checkNftStatus()\n    }\n  }, [account, showModal])\n\n  return <div />\n}\n\nexport default NftGlobalNotification\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { HashRouter as Router, Route, Switch, /* Redirect */ } from \"react-router-dom\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport { ResetCSS } from \"@pancakeswap-libs/uikit\";\nimport BigNumber from \"bignumber.js\";\nimport { useFetchPublicData } from \"state/hooks\";\nimport queryString from \"query-string\";\nimport { useCookies } from \"react-cookie\";\nimport GlobalStyle from \"./style/Global\";\nimport Menu from \"./components/Menu\";\nimport PageLoader from \"./components/PageLoader\";\nimport NftGlobalNotification from \"./views/Nft/components/NftGlobalNotification\";\n\n// Route-based code splitting\nconst Home = lazy(() => import(\"./views/Home\"));\nconst Farms = lazy(() => import(\"./views/Farms\"));\nconst Pools = lazy(() => import(\"./views/Pools\"));\nconst Referrals = lazy(() => import(\"./views/Referrals\"));\nconst Products = lazy(() => import(\"./views/Products\"));\nconst NotFound = lazy(() => import(\"./views/NotFound\"));\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n});\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet();\n\n  useEffect(() => {\n    if (!account && window.localStorage.getItem(\"accountStatus\")) {\n      connect(\"injected\");\n    }\n  }, [account, connect]);\n\n  useFetchPublicData();\n\n  const getParams = queryString.parse(window.location.search);\n  const [, setCookie, ] = useCookies([\"refer\"]);\n  // const [, setCookie, removeCookie] = useCookies([\"refer\"]);\n\n  if (\"refer\" in getParams) {\n    // Get the referal address from the parameter\n    let referralAddress = getParams.refer as string;\n\n    // Prepend 0x to the address since it will not contain it\n    referralAddress = `0x${referralAddress}`;\n\n    // Set a referral cookie if the user is logged in\n    if (account) {\n      setCookie(\"refer\", referralAddress, {\n        path: \"/\",\n        expires: new Date(Date.now() + 2592000)\n      });\n\n      window.location.href = `https://runitup.finance/`;\n    }\n  }\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/referrals\">\n              <Referrals />\n            </Route>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <NftGlobalNotification />\n    </Router>\n  );\n};\n\nexport default React.memo(App);\n","import React, { createContext, ReactNode, useCallback, useState } from \"react\";\nimport { kebabCase } from \"lodash\";\nimport { Toast, toastTypes } from \"@pancakeswap-libs/uikit\";\nimport { ToastContextApi } from \"./types\";\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi[\"toasts\"]>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, \"id\">) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n\n  const clear = () => setToasts([])\n\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from \"contexts/ToastsContext\";\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ToastsProvider>\n        <ThemeContextProvider>\n          <LanguageContextProvider>\n            <bsc.UseWalletProvider\n              chainId={chainId}\n              connectors={{\n                walletconnect: { rpcUrl },\n                bsc,\n              }}\n            >\n              <BlockContextProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </BlockContextProvider>\n            </bsc.UseWalletProvider>\n          </LanguageContextProvider>\n        </ThemeContextProvider>\n      </ToastsProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}