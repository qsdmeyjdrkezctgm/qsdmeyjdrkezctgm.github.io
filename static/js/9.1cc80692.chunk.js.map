{"version":3,"sources":["utils/formatBalance.ts","utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/UnlockButton.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/Syrup.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","referrer","document","cookie","indexOf","START","END","substring","deposit","times","toString","on","tx","transactionHash","unstake","withdraw","harvest","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useHarvest","farmPid","dispatch","useDispatch","useWallet","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","sousId","useSousChef","handleHarvest","updateUserPendingReward","updateUserBalance","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledInputWrapper","colors","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useApprove","onApprove","useSousApprove","sousChefContract","updateUserAllowance","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","useSousUnstake","onUnstake","useUnstake","useBlock","BlockContext","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","href","to","buttonColor","background","ButtonChild","target","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","memo","YoloSwag0","YoloSwag","LockupButton","PoolFinishedSash","StyledCardActions","StyledActionSpacer","StyledDetails","RainbowLight","keyframes","StyledCardAccent","HarvestLockup","TokenImage","PoolCard","pool","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","nextHarvestUntil","Math","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","currentTime","floor","Date","now","harvestLockup","minutes","seconds","isActive","display","alignItems","justifyContent","width","src","alt","HarvestButton","flex","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","Hero","Title","Subtitle","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.1cc80692.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  let referrer = \"0x0000000000000000000000000000000000000000\";\n\n  if (document.cookie.indexOf(\"refer=\") !== -1) {\n    const START = document.cookie.indexOf(\"refer=\") + 6;\n    const END = document.cookie.substring(START).indexOf(\";\");\n\n    if (END === -1) {\n      referrer = document.cookie.substring(START);\n    } else {\n      referrer = document.cookie.substring(START).substring(0, END);\n    }\n  }\n\n  return masterChefContract.methods.deposit(\n    pid,                                                               // uint256 _pid\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), // uint256 _amount\n    referrer                                                           // address _referrer\n  )\n  .send({ from: account })\n  .on(\"transactionHash\", (tx) => {\n    return tx.transactionHash\n  });\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  let referrer = \"0x0000000000000000000000000000000000000000\";\n\n  if (document.cookie.indexOf(\"refer=\") !== -1) {\n    const START = document.cookie.indexOf(\"refer=\") + 6;\n    const END = document.cookie.substring(START).indexOf(\";\");\n\n    if (END === -1) {\n      referrer = document.cookie.substring(START);\n    } else {\n      referrer = document.cookie.substring(START).substring(0, END);\n    }\n  }\n\n  return masterChefContract.methods\n    .deposit(\n      pid,     // uint256 _pid\n      \"0\",     // uint256 _amount\n      referrer // address _referrer\n    )\n    .send({ from: account })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash\n    });\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: #abc12300;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvest(masterChefContract, sousId, account);\n\n    // if (sousId === 0) {\n    //   await harvest(masterChefContract, 0, account)\n    // } else if (isUsingBnb) {\n    //   await soushHarvestBnb(sousChefContract, account)\n    // } else {\n    //   await soushHarvest(sousChefContract, account)\n    // }\n\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, masterChefContract, sousId])\n  // }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            Deposit Fee: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(masterChefContract, sousId, amount, account);\n\n      // if (sousId === 0) {\n      //   await stake(masterChefContract, 0, amount, account)\n      // } else if (isUsingBnb) {\n      //   await sousStakeBnb(sousChefContract, amount, account)\n      // } else {\n      //   await sousStake(sousChefContract, amount, account)\n      // }\n\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, masterChefContract, sousId],\n    // [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  // const sousChefContract = useSousChef(sousId)\n  // const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstake(masterChefContract, sousId, amount, account);\n\n      // if (sousId === 0) {\n      //   console.info(txHash)\n      // } else if (isOldSyrup) {\n      //   const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // } else {\n      //   const txHash = await sousUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // }\n\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, masterChefContract, sousId],\n    // [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? \"Pending Confirmation\" : \"Confirm\"}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n  text-align: center;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  align-self: baseline;\n  background: hsl(170deg 100% 4%);\n  border: 1px solid green;\n  box-shadow: inset 0 0px 40px -6px green;\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? `#123456` : `#3a3a3a`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from \"bignumber.js\";\nimport React, { useCallback, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Button, IconButton, useModal, AddIcon } from \"@pancakeswap-libs/uikit\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport UnlockButton from \"components/UnlockButton\";\nimport Label from \"components/Label\";\nimport { useERC20 } from \"hooks/useContract\";\nimport { useSousApprove } from \"hooks/useApprove\";\nimport { useSousStake } from \"hooks/useStake\";\nimport { useSousUnstake } from \"hooks/useUnstake\";\nimport useBlock from \"hooks/useBlock\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useSousHarvest } from \"hooks/useHarvest\";\nimport Balance from \"components/Balance\";\nimport { PoolCategory } from \"config/constants/types\";\nimport { Pool } from \"state/types\";\nimport DepositModal from \"./DepositModal\";\nimport WithdrawModal from \"./WithdrawModal\";\nimport CompoundModal from \"./CompoundModal\";\nimport CardTitle from \"./CardTitle\";\nimport Card from \"./Card\";\nimport HarvestButton from \"./HarvestButton\";\nimport CardFooter from \"./CardFooter\";\n\nconst YoloSwag0 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  div:first-child  {\n    font-size: 16px;\n  }\n\n  div:nth-child(2) {\n    color: #EAE2FC;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 1;\n    margin-bottom: 12px;\n  }\n`;\n\nconst YoloSwag = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst LockupButton = styled.div`\n  width: 150px;\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background: #3a3a3a;\n  border-radius: 12px;\n  color: #acaaaf;\n  cursor: pointer;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  font-weight: 700;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 24px;\n  pointer-events: none;\n  border: 2px solid #eee;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`;\n\nconst PoolFinishedSash = styled.div`\n  background-image: url(\"/images/pool-finished-sash.svg\");\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDetails = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 0%;\n  }\n  /* 50% {\n    background-position: 100% 50%;\n  } */\n  100% {\n    background-position: 0% 90%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(0deg,\n    rgba(25, 75, 255, 1)    0%,\n    rgba(76, 255, 32, 1)   10%,\n    rgba(25, 75, 255, 1)   20%,\n    rgba(76, 255, 32, 1)   30%,\n    rgba(25, 75, 255, 1)   40%,\n    rgba(76, 255, 32, 1)   50%,\n    rgba(25, 75, 255, 1)   60%,\n    rgba(76, 255, 32, 1)   70%,\n    rgba(25, 75, 255, 1)   80%,\n    rgba(76, 255, 32, 1)   90%,\n    rgba(25, 75, 255, 1)  100%);\n\n  background-size: 300% 300%;\n  border-radius: 0;\n  filter: blur(20px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n  animation: ${RainbowLight} 2s linear infinite;\n`\n\nconst HarvestLockup = styled.div`\n  color: #EAE2FC;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.5;\n`;\n\nconst TokenImage = styled.div`\n  display: flex;\n  height: 83px;\n  margin-bottom: 2px;\n  transition: 0.4s ease-in-out;\n\n  &:hover {\n    transform: rotateY(360deg);\n  }\n`;\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool;\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const stakingTokenContract = useERC20(stakingTokenAddress);\n  const { account } = useWallet();\n  const block = useBlock();\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId);\n  const { onStake } = useSousStake(sousId, isBnbPool);\n  const { onUnstake } = useSousUnstake(sousId);\n  const { onReward } = useSousHarvest(sousId, isBnbPool);\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber(userData?.allowance || 0);\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0);\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0);\n  const earnings = new BigNumber(userData?.pendingReward || 0);\n  const nextHarvestUntil = (new BigNumber(userData?.nextHarvestUntil || 0)).toNumber();\n  const blocksUntilStart = Math.max(startBlock - block, 0);\n  const blocksRemaining = Math.max(endBlock - block, 0);\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals));\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  );\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  );\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  );\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove();\n\n      if (!txHash) { // The user either rejected the transaction or it failed\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n\n  // Calculate harvest lockup\n  const currentTime = Math.floor(Date.now() / 1000);\n  let harvestLockup = false;\n  let minutes = 0;\n\n  if (\n    nextHarvestUntil > 0\n    && (nextHarvestUntil - currentTime >= 0)\n  ) {\n    harvestLockup = true;\n    const seconds = (nextHarvestUntil - currentTime) + 1;\n    minutes = Math.floor(seconds / 60) + 1;\n  }\n\n  return (\n    <Card\n      isActive={isCardActive}\n        isFinished={isFinished && sousId !== 0}\n    >\n\n      {pool.sousId === 0 && <StyledCardAccent />}\n\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n\n      <div style={{ padding: \"24px\" }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {tokenName} Pool\n        </CardTitle>\n\n        <div style={{ marginBottom: \"8px\", display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\n            <TokenImage>\n              <img src={`/images/tokens/${tokenName}.png`} alt={tokenName} />\n            </TokenImage>\n          </div>\n        </div>\n\n        <YoloSwag0>\n            <Label isFinished={isFinished && sousId !== 0} text=\"UPWARD earned\" />\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n        </YoloSwag0>\n\n        {(harvestLockup ?\n          <YoloSwag>\n            {account && harvest && (\n              <LockupButton>Lockup: {minutes} minute{(minutes !== 1 ? \"s\" : \"\")}</LockupButton>\n            )}\n          </YoloSwag>\n\n          :\n\n          <YoloSwag>\n            {account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? \"Collecting\" : \"Harvest\"}\n                onClick={async () => {\n                  setPendingTx(true);\n                  await onReward();\n                  setPendingTx(false);\n                }}\n              />\n            )}\n\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? \"Compounding\" : \"Compound\"}\n                onClick={onPresentCompound}\n              />\n            )}\n          </YoloSwag>\n        )}\n\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={onPresentWithdraw}\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n          ))}\n        </StyledCardActions>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>APR:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={0} decimals={2} unit=\"%\" />\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            Your Stake:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            Harvest Lockup:\n          </div>\n\n          <HarvestLockup>2 hours</HarvestLockup>\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  );\n};\n\nexport default PoolCard;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React from \"react\";\nimport { Route, useRouteMatch } from \"react-router-dom\";\nimport BigNumber from \"bignumber.js\";\nimport styled from \"styled-components\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport { BLOCKS_PER_YEAR } from \"config\";\nimport orderBy from \"lodash/orderBy\";\nimport partition from \"lodash/partition\";\nimport useBlock from \"hooks/useBlock\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useFarms, usePriceBnbBusd, usePools } from \"state/hooks\";\nimport { PoolCategory } from \"config/constants/types\";\nimport FlexLayout from \"components/layout/Flex\";\nimport Page from \"components/layout/Page\";\nimport PoolCard from \"./components/PoolCard\";\nimport PoolTabButtons from \"./components/PoolTabButtons\";\n\nconst Hero = styled.div`\n  align-items: center;\n  /* background-image: url('/images/banner-runitup.png'); */\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: contain;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  min-height: 116px;\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-size: 32px;\n  font-weight: bold;\n  color: white;\n\n  div {\n    display: flex;\n  }\n`;\n\nconst Subtitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: white;\n`;\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: string): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === \"BNB\") {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === \"BUSD\") {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <Title>\n          <div>Token Pools</div>\n        </Title>\n      </Hero>\n\n      <Subtitle>\n        <div>Stake various tokens to earn UPWARD</div>\n        <div>You may unstake at any time</div>\n      </Subtitle>\n\n      <PoolTabButtons />\n\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, [\"sortOrder\"]).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, [\"sortOrder\"]).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n};\n\nexport default Farm;\n"],"sourceRoot":""}